{"version":3,"sources":["history.js","apis/streams.js","actions/index.js","actions/types.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/streams/StreamEdit.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","config.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["createBrowserHistory","axios","create","baseURL","fetchStream","id","dispatch","a","async","streams","get","response","type","payload","data","StreamForm","renderInput","label","input","meta","className","error","touched","autoComplete","renderError","onSubmit","formValues","props","this","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","title","description","StreamCreate","createStream","connect","getState","userId","auth","post","history","push","StreamEdit","console","log","editStream","match","params","stream","initialValues","_","pick","state","ownProps","patch","Modal","ReactDOM","createPortal","onClick","onDissmiss","e","stopPropagation","content","actions","document","querySelector","StreamDelete","Fragment","deleteStream","to","renderContent","renderActions","delete","StreamList","fetchStreams","currentUserId","map","key","renderAdmin","isSignedIn","style","textAlign","renderList","renderCreate","Object","values","StreamShow","videoRef","createRef","buildPlayer","player","destroy","flv","createPlayer","url","attachMediaElement","current","load","ref","width","controls","apiKey","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","App","path","exact","ININTIAL_STATE","combineReducers","action","reducer","mapKeys","omit","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.e32b85fb.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history';\n\nexport default createBrowserHistory();\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'http://localhost:3001'\n});\n","import history from '../history';\n\n// action creators\n\nimport streams from \"../apis/streams\";\nimport {\n  SIGN_IN,\n  SIGN_OUT,\n  CREATE_STREAM,\n  FETCH_STREAMS,\n  FETCH_STREAM,\n  DELETE_STREAM,\n  EDIT_STREAM\n} from \"./types\";\n\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\n\n//\n\nexport const createStream = (formValues) => {\n  // using redux thunk\n  return async (dispatch, getState) => {\n    // fetching user id from redux store using getstate\n    const {userId} = getState().auth;\n    // posting the form values at /streams\n    const response = await streams.post(\"/streams\", {...formValues, userId});\n    // dispatching actionCreator with payload as data fetched by axios\n    dispatch({ type: CREATE_STREAM, payload: response.data });\n    history.push('/');\n  };\n};\n\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get(\"/streams\");\n  dispatch({ type: FETCH_STREAMS, payload: response.data });\n};\n\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({ type: FETCH_STREAM, payload: response.data });\n};\n\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.patch(`/streams/${id}`, formValues);\n  dispatch({ type: EDIT_STREAM, payload: response.data });\n  history.push('/');\n};\n\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({ type: DELETE_STREAM, payload: id });\n  history.push('/')\n};\n","// avoiding typos by creating a seperate file for all the strings used in combineReducers\nexport const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const CREATE_STREAM = 'CREATE_STREAM';\nexport const FETCH_STREAMS = 'FETCH_STREAMS';\nexport const FETCH_STREAM = 'FETCH_STREAM';\nexport const DELETE_STREAM = 'DELETE_STREAM';\nexport const EDIT_STREAM = 'EDIT_STREAM';\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\n\nclass StreamForm extends React.Component {\n  //to show errors we are creating a helper method renderError\n  renderError({ touched, error }) {\n    if (touched && error) {\n      return (\n        <div className=\"ui error message\">\n          <div className=\"header\">{error}</div>\n        </div>\n      );\n    }\n  }\n\n  // the below method diplays form on screen with the help of Field component\n  renderInput = ({ label, input, meta }) => {\n    // destructured(ES6) the props above\n    // console.loginput();\n\n    const className = `field ${meta.error && meta.touched ? \"error\" : \"\"}`;\n    return (\n      <div className={className}>\n        <label> {label} </label>\n        <input {...input} autoComplete=\"off\" />\n        {this.renderError(meta)}\n      </div>\n    );\n    // above, all the properties of formProps are being applied to input element\n  };\n\n  // method for form handling\n  onSubmit = formValues => {\n    this.props.onSubmit(formValues);\n  };\n\n  render() {\n    // console.log(this.props);\n    return (\n      <form\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\n        className=\"ui form error\"\n      >\n        <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\n        <Field\n          name=\"description\"\n          component={this.renderInput}\n          label=\"Enter Description\"\n        />\n        <button className=\"ui primary button\"> Submit </button>\n      </form>\n    );\n  }\n\n  // a validate function for form validation\n}\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a title\";\n  }\n  if (!formValues.description) {\n    errors.description = \"You must enter a description\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"streamForm\", // whatever, it will be stored in redux by this name\n  validate: validate\n})(StreamForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\n\nclass StreamCreate extends React.Component {\n  //to show errors we are creating a helper method renderError\n\n  // method for form handling\n  onSubmit = formValues => {\n    this.props.createStream(formValues);\n  };\n\n  render() {\n    // console.log(this.props);\n    return (\n      <div>\n        <h3> Create A Stream </h3>\n          <StreamForm onSubmit={this.onSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { createStream }\n)(StreamCreate);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStream, editStream } from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\n\nimport _ from 'lodash';\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id); // calling in the action creator and passing id of the stream as an argument\n  }\n\n  onSubmit = formValues => {\n    console.log(formValues);\n    this.props.editStream(this.props.match.params.id, formValues);\n  };\n\n  // coz streamEdit is rendered by Route hence props get added\n  render() {\n    if (!this.props.stream) {\n      return <div> Loading... </div>;\n    }\n    return (\n      // using lodash below to only pick title and desc as initial values\n      <div>\n        <h3> Edit A Stream </h3>\n        <StreamForm\n          initialValues={ _.pick(this.props.stream, 'title', 'description') }\n          onSubmit={this.onSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(ownProps); ownProps contains same data as props in the above elements\n  return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchStream, editStream }\n)(StreamEdit);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Modal = props => {\n  // return values\n  // createPortal takestwo args:- comp. to be rendered\n  //                           :- reference to  the ele we wanna attach this to\n  return ReactDOM.createPortal(\n    // onclick event to exit modal, if we trigger any event on a child\n    // element and that child element does not handle that event the event\n    // is going to bubble up back to the parent element unless it gets caught\n    // with an event handler, to prevent this we can add an event handler to\n    // child as well. (Whenever event occurs we get event object e)\n    <div\n      onClick={props.onDissmiss}\n      className=\"ui dimmer modals visible active\"\n    >\n      (// onClick event handler to exit modal only when user clicks in background)\n      of modal\n      <div\n        onClick={e => e.stopPropagation()}\n        className=\"ui standard modal visible active\"\n      >\n        <div className=\"header\"> {props.title} </div>\n        <div className=\"content\">{props.content}</div>\n        <div className=\"actions\">{props.actions} </div>\n      </div>\n    </div>,\n    document.querySelector(\"#modal\")\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport Modal from \"../Modal\";\nimport {Link} from 'react-router-dom'\nimport history from \"../../history\";\nimport { connect } from \"react-redux\";\nimport { fetchStream, deleteStream } from \"../../actions\";\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n  // assigning two things(buttons here) from a single actions variable isn't a\n  // valid JS, so we decided to wrap them with a div but that div\n  // didn't worked along with semanticUi, So, using React fragment\n  // which will maintain our styling.\n  // React fragment is a jsx looking element that doesn't produce any\n  // HTML, almost invisible\n\n   //inside below onClick function, not making the button a Link component\n   // coz we don't want the user to navigate, we want to redirect.\n  renderActions() {\n    const id = this.props.match.params.id;\n    return (\n      <React.Fragment>\n        <button onClick={() => this.props.deleteStream(id)} className=\"ui button negative\"> Delete </button>\n        <Link to='/' className=\"ui button\"> Cancel </Link>\n      </React.Fragment>\n    );\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return \"Are you sure you want to delete this stream ?\";\n    }\n    return `Are you sure you want to delete this stream with title: ${this.props.stream.title}`;\n  }\n\n  render() {\n    return (\n      <Modal\n        title=\"Delete Stream\"\n        content={this.renderContent()}\n        actions={this.renderActions()}\n        onDissmiss={() => history.push(\"/\")}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchStream, deleteStream }\n)(StreamDelete);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStreams } from \"../../actions\";\nimport { Link } from \"react-router-dom\";\n\n// const StreamList = () => {\n//   return <div>StreamList</div>;\n// };\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  // this helper method compares current userID with that associated to stream to authenticate users\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return (\n        <div className=\"right floated content\">\n          <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n            Edit\n          </Link>\n          <Link\n            to={`/streams/delete/${stream.id}`}\n            className=\"ui button negative\"\n          >\n            Delete\n          </Link>\n        </div>\n      );\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return (\n        <div className=\"item\" key={stream.id}>\n          {this.renderAdmin(stream)}\n          <i className=\"large middle aligned icon camera\" />\n          <div className=\"content\">\n            <Link to={`/streams/${stream.id}`}>{stream.title}</Link>\n            <div className=\"description\"> {stream.description} </div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  // helper method to create stream, only visible to logged in users\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return (\n        <div style={{ textAlign: \" \" }}>\n          <Link to=\"/streams/new\" className=\"ui button primary\">\n            Create Stream\n          </Link>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2> Streams </h2>\n        <div className=\"ui celled list\"> {this.renderList()}</div>\n        {this.renderCreate()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // we have streams in the form of objs, so, turning objs to array\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchStreams }\n)(StreamList);\n","import React from \"react\";\nimport flv from \"flv.js\"\nimport { connect } from \"react-redux\";\nimport { fetchStream } from \"../../actions\";\n\nclass StreamShow extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.videoRef = React.createRef();\n  }\n  componentDidMount() {\n    const {id} = this.props.match.params\n    console.log(this.videoRef);\n\n    this.props.fetchStream(id);\n\n    this.buildPlayer();\n  }\n\n  // we handled loading the video player when the component would render\n  // initially, above. Here we want the player to be rendered any time the\n  // StreamShow component gets re-rendered or gets updated\n  componentDidUpdate() {\n    this.buildPlayer();\n  }\n\n  // using this lifecycle method to stop the stream\n  componentWillUnmount() {\n    this.player.destroy();\n  }\n\n  buildPlayer() {\n    if(this.player || !this.props.stream) {\n      return;\n    }\n    // setting up player,\n    const {id} = this.props.match.params\n    this.player = flv.createPlayer({\n      type: 'flv',\n      url: `http://localhost:8000/live/${id}.flv`\n    });\n    this.player.attachMediaElement(this.videoRef.current);\n    this.player.load(); // not trying to automatically play the video, only user can.\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return <div> Loading... </div>;\n    }\n    const { title, description } = this.props.stream;\n\n    return (\n      <div>\n        <video ref={this.videoRef} style={{width: '100%'}} controls={true} />\n        <h1> {title} </h1>\n        <h5> {description} </h5>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchStream }\n)(StreamShow);\n","export const apiKey = {\n  oauthKey : \"628635127890-1rk64sve938ao3mu39rlbg1dqdr54qjn.apps.googleusercontent.com\"\n}\n","import React from \"react\";\nimport {signIn, signOut} from '../actions';\nimport {connect} from 'react-redux';\nimport {apiKey} from '../config.js';\n\nclass GoogleAuth extends React.Component {\n\n  componentDidMount() {\n    window.gapi.load(\"client: auth2\", () => {\n      window.gapi.client\n        .init({\n          clientId:\n            apiKey.oauthKey,\n          scope: \"email\"\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          // this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n          // Listen for changes in the current user's sign-in state. Arguments -> listener\n          // A function that takes a boolean value. listen() passes true to this\n          // function when the user signs in, and false when the user signs out.\n\n          // using redux now rather than state:\n          this.onAuthChange(this.auth.isSignedIn.get());\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  // onAuthChange = () => {\n  //   this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n  // };\n\n  // this callback gets called with a boolean to know whether a user is signed in or not\n  onAuthChange = (isSignedIn) => {\n    if(isSignedIn) {\n      this.props.signIn(this.auth.currentUser.get().getId());\n    } else {\n      this.props.signOut();\n    }\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  }\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      // return <div> I dont know if we are signed in </div>;\n      return null;\n    } else if (this.props.isSignedIn) {\n      return (\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\n          {\" \"}\n          <i className=\"google icon\" />\n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign In With Google\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return <div> {this.renderAuthButton()} </div>;\n  }\n}\n\n//\nconst mapStateToProps = (state) => {\n  return {isSignedIn: state.auth.isSignedIn};\n};\n\nexport default connect(\n  mapStateToProps,\n  {signIn, signOut}\n)(GoogleAuth);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport GoogleAuth from './GoogleAuth.js';\n\nconst Header = () => {\n  return (\n    <div className=\"ui secondary pointing menu\">\n      <Link to=\"/\" className=\"item\">\n        Acidy Streams\n      </Link>\n      <div className=\"right menu\">\n        <Link to=\"/\" className=\"item\">\n          All Streams\n        </Link>\n        <GoogleAuth />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport history from \"../history\";\n\nimport StreamCreate from \"./streams/StreamCreate\";\nimport StreamEdit from \"./streams/StreamEdit\";\nimport StreamDelete from \"./streams/StreamDelete\";\nimport StreamList from \"./streams/StreamList\";\nimport StreamShow from \"./streams/StreamShow\";\n\nimport Header from \"./Header.js\";\n\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <Router history={history}>\n        <div>\n          <Header />\n          <Switch>\n            <Route path=\"/\" exact component={StreamList} />\n            <Route path=\"/streams/new\" exact component={StreamCreate} />\n            <Route path=\"/streams/edit/:id\" exact component={StreamEdit} />\n            <Route path=\"/streams/delete/:id\" exact component={StreamDelete} />\n            <Route path=\"/streams/:id\" exact component={StreamShow} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import {SIGN_IN, SIGN_OUT} from '../actions/types';\n\nconst ININTIAL_STATE = {  // capitalize syntax means don;t try to modify this const value\n  isSignedIn: null,\n  userId: null\n}\n\nexport default (state = ININTIAL_STATE, action) => {\n  switch(action.type) {\n    case SIGN_IN:\n      return {...state, isSignedIn: true, userId: action.payload};\n    case SIGN_OUT:\n      return {...state, isSignedIn: false, userId: null};\n    default:\n      return state;\n  }\n\n\n\n};\n","//  reducers\n\nimport {combineReducers} from 'redux';\nimport authReducer from './authReducer';\nimport streamReducer from './streamReducer.js'\n\n// importing pre-provided reducer from redux-form\nimport {reducer} from 'redux-form';\n\nexport default combineReducers({\n  auth: authReducer,\n  form: reducer,\n  streams: streamReducer\n});\n","import _ from 'lodash';\nimport {\n  FETCH_STREAM,\n  FETCH_STREAMS,\n  CREATE_STREAM,\n  EDIT_STREAM,\n  DELETE_STREAM\n} from \"../actions/types\";\n\n\n\nexport default (state = {}, action) => {\n  switch (action.type){\n\n    case FETCH_STREAMS:\n      // a new obj is being created by taking current records. mapKeys take all\n      // of the data from payload and convert that into a new object with keys\n      // equal to the property specified after the comma(id here), ... at\n      // mapKeys mean that a new obj is to be created everytime that is\n      // holding the prev. values as well.\n      return {...state, ..._.mapKeys(action.payload, 'id')};\n\n    case FETCH_STREAM:\n    // below is an es6 syntax for key interpolation, its a key value not an array.\n      return {...state, [action.payload.id]: action.payload};\n\n    case CREATE_STREAM:\n      return {...state, [action.payload.id]: action.payload};\n\n    case EDIT_STREAM:\n      return {...state, [action.payload.id]: action.payload};\n\n    case DELETE_STREAM:\n    // here the payload is id itself, check action creator. Using lodash here.\n      return _.omit(state, action.payload);\n\n\n    default:\n    return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport reduxThunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from \"redux\";\n\nimport App from \"./components/App.js\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}